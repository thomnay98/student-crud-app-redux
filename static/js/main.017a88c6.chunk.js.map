{"version":3,"sources":["constants/ActionTypes.js","components/ModalForm.js","actions/StudentActions.js","components/Header.js","components/Student.js","components/StudentList.js","App.js","reportWebVitals.js","reducers/studentReducer.js","reducers/index.js","store.js","index.js"],"names":["ADD_STUDENT","GET_STUDENT","DELETE_STUDENT","CLEAR_STUDENT","UPDATE_STUDENT","checkExistValue","arr","id","i","length","toString","alert","ModalForm","show","handleClose","title","tempId","dispatch","useDispatch","students","useSelector","state","useState","setID","name","setName","email","setEmail","grade","setGrade","gpa","setGPA","validated","setValidated","existID","setExistID","useEffect","student","find","Modal","onHide","backdrop","keyboard","centered","dialogClassName","Form","noValidate","onSubmit","e","currentTarget","checkValidity","preventDefault","stopPropagation","type","types","payload","Header","closeButton","Title","Body","Group","as","Row","controlId","Label","column","sm","Col","Control","className","required","value","disabled","placeholder","onChange","target","Feedback","Footer","Button","variant","onClick","setShow","href","Student","handleShow","getTempID","scope","deleteStudent","StudentList","setTempId","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","combineReducers","action","tempStudent","filter","values","val","selectedStudents","store","createStore","rootReducer","serializedState","localStorage","getItem","JSON","parse","console","warn","loadFromLocalStorage","composeWithDevTools","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.017a88c6.chunk.js","sourcesContent":["export const ADD_STUDENT = 'ADD_STUDENT';\r\nexport const GET_STUDENT = 'GET_STUDENT';\r\nexport const DELETE_STUDENT = 'DELETE_STUDENT';\r\nexport const CLEAR_STUDENT = 'CLEAR_STUDENT';\r\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT';","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addStudent, updateStudent } from '../actions/StudentActions';\r\n\r\nconst checkExistValue = (arr, id) => {\r\n    for(let i = 0; i < arr.length; i++){\r\n        if(arr[i].id.toString() === id){\r\n            alert('Mã số sinh viên đã tồn tại!');\r\n            return false;\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nconst ModalForm = ({show, handleClose, title, tempId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const students  = useSelector((state) => state.students.students);\r\n\r\n    const [id, setID] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [grade, setGrade] = useState(\"\");\r\n    const [gpa, setGPA] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n    const [existID, setExistID] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false || !checkExistValue(students, id)) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setExistID(!checkExistValue(students, id));\r\n            setValidated(true);\r\n            \r\n        }else{\r\n            const new_student = {\r\n                id: id,\r\n                name: name,\r\n                email: email,\r\n                grade: grade,\r\n                gpa: gpa\r\n            };\r\n            dispatch(addStudent(new_student));\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    const handleUpdate = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            \r\n        }\r\n        setValidated(true);\r\n\r\n        const new_student = {\r\n            id: id,\r\n            name: name,\r\n            email: email,\r\n            grade: grade,\r\n            gpa: gpa\r\n        };\r\n        dispatch(updateStudent(new_student));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(tempId && students){\r\n            let student = students.find((student) => student.id === tempId)\r\n            setID(student.id)\r\n            setName(student.name)\r\n            setEmail(student.email)\r\n            setGrade(student.grade)\r\n            setGPA(student.gpa)\r\n        }\r\n    }, [students, tempId]);\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            centered={true}\r\n            dialogClassName=\"modal-form\"\r\n        >\r\n            <Form noValidate validated={validated} onSubmit={!tempId?handleSubmit:handleUpdate}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title?title:\"Thêm sinh viên\"}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextID\">\r\n                        <Form.Label column sm=\"3\">\r\n                            MSSV\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control \r\n                                className={existID?\"border border-danger\":null}\r\n                                required \r\n                                type=\"text\"\r\n                                value={id}\r\n                                disabled={tempId?true:false}\r\n                                placeholder=\"Mã số sinh viên\" \r\n                                onChange={ (e) => setID(e.target.value) }\r\n                            />\r\n                            {\r\n                                existID\r\n                                ?\r\n                                <Form.Control.Feedback className=\"text-danger\">\r\n                                    MSSV đã tồn tại!\r\n                                </Form.Control.Feedback>\r\n                                :\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    MSSV không được để trống!\r\n                                </Form.Control.Feedback>\r\n                            }\r\n                            \r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Họ Tên\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control \r\n                                required \r\n                                type=\"text\" \r\n                                value={name}\r\n                                placeholder=\"Họ và tên\" \r\n                                onChange={ (e) => setName(e.target.value) }\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Họ tên không được để trống!\r\n                            </Form.Control.Feedback>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Email\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control \r\n                                required \r\n                                type=\"email\" \r\n                                value={email}\r\n                                placeholder=\"Email\"\r\n                                onChange={ (e) => setEmail(e.target.value) }\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Email không được để trống!\r\n                            </Form.Control.Feedback>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formPlaintextGrade\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Lớp\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control \r\n                                required \r\n                                type=\"text\" \r\n                                value={grade}\r\n                                placeholder=\"Lớp\"\r\n                                onChange={ (e) => setGrade(e.target.value) }\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Lớp không được để trống!\r\n                            </Form.Control.Feedback>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formPlaintextGPA\">\r\n                        <Form.Label column sm=\"3\">\r\n                            Điểm\r\n                        </Form.Label>\r\n                        <Col sm=\"9\">\r\n                            <Form.Control \r\n                                required \r\n                                type=\"number\" \r\n                                value={gpa}\r\n                                placeholder=\"Điểm trung bình\" \r\n                                onChange={ (e) => setGPA(e.target.value) }\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Điểm không được để trống!\r\n                            </Form.Control.Feedback>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Đóng\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"primary\">{!tempId?\"Thêm\":\"Cập nhật\"}</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalForm;\r\n\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nexport const addStudent = (student) => ({\r\n    type: types.ADD_STUDENT,\r\n    payload: student\r\n});\r\n\r\nexport const getStudent = (id) => ({\r\n    type: types.GET_STUDENT,\r\n    payload: id\r\n});\r\n\r\nexport const updateStudent = (student) => ({\r\n    type: types.UPDATE_STUDENT,\r\n    payload: student\r\n});\r\n\r\nexport const deleteStudent = (id) => ({\r\n    type: types.DELETE_STUDENT,\r\n    payload: id\r\n});\r\n\r\nexport const clearStudent = (id) => ({\r\n    type: types.CLEAR_STUDENT,\r\n    payload: id\r\n});","import React, { useState } from 'react';\r\n\r\nimport ModalForm from './ModalForm';\r\n\r\nconst Header = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <nav className=\"navbar shadow fixed-top navbar-expand-sm navbar-dark bg-primary\">\r\n            <div className=\"container\">\r\n                <a href=\"#\" className=\"navbar-brand\">Quản Lý Sinh Viên</a>\r\n                <button type=\"button\" className=\"btn btn-light ml-auto\" onClick={handleShow}>Thêm sinh viên</button>\r\n                <ModalForm show={show} handleClose={handleClose} />\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { deleteStudent } from '../actions/StudentActions';\r\n\r\nconst Student = (student) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {id, name, email, grade, gpa} = student.student;\r\n    const { handleShow, getTempID } = student;\r\n    \r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>{name}</td>\r\n            <td>{email}</td>\r\n            <td>{grade}</td>\r\n            <td>{gpa}</td>\r\n            <td>\r\n                <span \r\n                    className=\"material-icons text-warning mr-2\"\r\n                    onClick={() => {\r\n                        handleShow();\r\n                        getTempID(id);\r\n                    }}\r\n                >\r\n                    edit\r\n                </span>\r\n                <span\r\n                    className=\"material-icons text-danger\"\r\n                    onClick={() => dispatch(deleteStudent(id))}\r\n                    >\r\n                    delete_forever\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Student;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Student from './Student';\r\nimport ModalForm from './ModalForm';\r\n\r\nconst StudentList = () => {\r\n\r\n    const students = useSelector(state => state.students.students);\r\n    const [show, setShow] = useState(false);\r\n    const [tempId, setTempId] = useState(\"\");\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const getTempID = (id) => setTempId(id)\r\n\r\n    return (\r\n        <section className=\"table-responsive\">\r\n            <table className=\"table border table-striped table-hover\">\r\n                <thead className=\"bg-primary text-light\">\r\n                    <tr>\r\n                        <th>MSSV</th>\r\n                        <th>HỌ TÊN</th>\r\n                        <th>EMAIL</th>\r\n                        <th>LỚP</th>\r\n                        <th>ĐIỂM</th>\r\n                        <th>SỬA/XÓA</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    students.map((student) => \r\n                        <Student key={student.id} student={student} handleShow={handleShow} getTempID={getTempID} />\r\n                    )\r\n                }\r\n                </tbody>\r\n            </table>\r\n            <ModalForm show={show} handleClose={handleClose} title={\"Cập nhật sinh viên\"} tempId={tempId} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StudentList;\r\n","import './styles/App.scss';\nimport React from 'react';\n\nimport Header from './components/Header'\nimport StudentList from './components/StudentList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"py-3\">\n          <StudentList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_STUDENT, GET_STUDENT, UPDATE_STUDENT, DELETE_STUDENT, CLEAR_STUDENT } from '../constants/ActionTypes';\r\n\r\nconst intialState = {\r\n\r\n    students: [\r\n        {\r\n            id: 16520000,\r\n            name: \"Hoàng Bách\",\r\n            email: \"hoangbach@gmail.com\",\r\n            grade: \"CNTT2016\",\r\n            gpa: 6.4\r\n        },\r\n        {\r\n            id: 16520001,\r\n            name: \"Hồng Hài Nhi\",\r\n            email: \"nhihh@gmail.com\",\r\n            grade: \"KHMT2016\",\r\n            gpa: 6.9\r\n        },\r\n        {\r\n            id: 16520002,\r\n            name: \"Triệu Mẫn\",\r\n            email: \"trieuman@gmail.com\",\r\n            grade: \"ANTT2016\",\r\n            gpa: 6.1\r\n        },\r\n    ],\r\n    student: null\r\n}\r\n\r\nexport const studentReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: [action.payload, ...state.students]\r\n            };\r\n\r\n        case GET_STUDENT:\r\n            let tempStudent = state.students.filter(\r\n                (student) => student.id === action.payload\r\n            );\r\n            tempStudent = tempStudent.values();\r\n            for (let val of tempStudent) {\r\n                tempStudent = val;\r\n            }\r\n            return {\r\n                ...state,\r\n                student: tempStudent,\r\n            };\r\n\r\n        case UPDATE_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: state.students.map((student) =>\r\n                    student.id === action.payload.id ? action.payload : student\r\n                ),\r\n            };\r\n        case DELETE_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: state.students.filter((student) => student.id !== action.payload)\r\n            };\r\n\r\n        case CLEAR_STUDENT:\r\n            return {\r\n                ...state,\r\n                selectedStudents: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\n\r\nimport { studentReducer } from './studentReducer';\r\n\r\nexport default combineReducers({\r\n    students: studentReducer\r\n});","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem(\"localData\", serializedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n      const serializedState = localStorage.getItem(\"localData\");\r\n      if (serializedState === null) return undefined;\r\n      return JSON.parse(serializedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return undefined;\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    loadFromLocalStorage(), \r\n    composeWithDevTools(),\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\n// store.subscribe(() => {\r\n//     const state = store.getState();\r\n//     Object.keys(state).forEach( key => {\r\n//         saveToLocalStorage(key, state[key])\r\n//         console.log(key);\r\n//     })\r\n// });\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}